{
  "contractName": "IMetaverse",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_key",
          "type": "address"
        }
      ],
      "name": "plugins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brandRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "economy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "defineFTType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "defineNFTType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "mintFTFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "mintNFTFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onTokenBurned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "onTokensBurned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_brandId",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "onBrandOwnerChanged",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"brandRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"defineFTType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"defineNFTType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"economy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintFTFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintNFTFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brandId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"onBrandOwnerChanged\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTokenBurned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"onTokensBurned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_key\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"brandRegistry()\":{\"notice\":\"The linked brand registry for this metaverse.\"},\"defineFTType(uint256)\":{\"notice\":\"Defines the resolution of a fungible token type. The token id must be in the range of the fungible token ids.\"},\"defineNFTType(uint256)\":{\"notice\":\"Defines the resolution of a non-fungible token type. The token id must be in the range of the fungible token (type) ids (strictly > 0, strictly < (1 << 255)).\"},\"economy()\":{\"notice\":\"The linked economy for this metaverse.\"},\"mintFTFor(address,uint256,uint256,bytes)\":{\"notice\":\"Mints a specific fungible token type, in a certain amount.\"},\"mintNFTFor(address,uint256,uint256,bytes)\":{\"notice\":\"Mints a specific non-fungible token type, using a specific id (and always using an amount of 1). It is an error if the token id is already minted, or the chosen id is < (1 << 160) since those ids are reserved for brands.\"},\"onBrandOwnerChanged(address,address)\":{\"notice\":\"Hook to be invoked as part of a transfer from ERC1155.\"},\"onTokenBurned(address,uint256,uint256)\":{\"notice\":\"Hook to be invoked as part of a burn process when an address burns a particular token in some quantity (for NFTs, the quantity is 1 in every case). By this point, we should be guaranteed that the _tokenId will actually have a resolver (being it a fungible token type, or being it a non-fungible token id).\"},\"onTokensBurned(address,uint256[],uint256[])\":{\"notice\":\"Hook to be invoked as part of a batch burn process when an address burns a particulars et of tokens in respective quantities (for NFTs, the quantity is 1 in every case; it is guaranteed that both arrays are always of the same length.\"},\"plugins(address)\":{\"notice\":\"This is the list of plug-ins that are being added to the hub. Each contract has its separate logic but they have access to the same set of features. Once a contract is added, it will never be removed from this list. This mapping tells whether a contract in particular has permission(s) to define a type and mint tokens for an address.\"},\"tokenURI(uint256)\":{\"notice\":\"Retrieves the metadata uri of a given token. WARNING: This method will consume a lot of gas if invoked inside a transaction, so it is recommended to invoke this method in the context of a CALL, and never in the context of a SEND (even as part of other contract's code).\"}},\"notice\":\"An interface for the metaverse core contract. This is meant to be used from inside the metaverse plug-ins (typically on plug-in initialization).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lingr/IMetaverse.sol\":\"IMetaverse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lingr/IMetaverse.sol\":{\"keccak256\":\"0xfa41b7b8bb8d3d11d8f980c93f02772e53ab0691b3e15813844628ecee8f1bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4ed6d919c8971eed9492ab07fac72249bc9b13d97d68cec08a9572103095894\",\"dweb:/ipfs/QmXrmMqKGDqLGk8w9R5h1tmaQA59b742srKDXiaTG6ruyc\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8 <0.9.0;\n\n/**\n * An interface for the metaverse core contract. This is meant\n * to be used from inside the metaverse plug-ins (typically on\n * plug-in initialization).\n */\ninterface IMetaverse {\n    /**\n     * This is the list of plug-ins that are being added to the hub.\n     * Each contract has its separate logic but they have access to\n     * the same set of features. Once a contract is added, it will\n     * never be removed from this list. This mapping tells whether\n     * a contract in particular has permission(s) to define a type\n     * and mint tokens for an address.\n     */\n    function plugins(address _key) external view returns (bool);\n\n    /**\n     * The linked brand registry for this metaverse.\n     */\n    function brandRegistry() external view returns (address);\n\n    /**\n     * The linked economy for this metaverse.\n     */\n    function economy() external view returns (address);\n\n    /**\n     * Defines the resolution of a fungible token type. The token id must be\n     * in the range of the fungible token ids.\n     */\n    function defineFTType(uint256 _tokenId) external;\n\n    /**\n     * Defines the resolution of a non-fungible token type. The token id must\n     * be in the range of the fungible token (type) ids (strictly > 0, strictly\n     * < (1 << 255)).\n     */\n    function defineNFTType(uint256 _tokenId) external;\n\n    /**\n     * Mints a specific fungible token type, in a certain amount.\n     */\n    function mintFTFor(address _to, uint256 _tokenId, uint256 _amount, bytes memory _data) external;\n\n    /**\n     * Mints a specific non-fungible token type, using a specific id (and always using\n     * an amount of 1). It is an error if the token id is already minted, or the chosen\n     * id is < (1 << 160) since those ids are reserved for brands.\n     */\n    function mintNFTFor(address _to, uint256 _tokenId, uint256 _tokenType, bytes memory _data) external;\n\n    /**\n     * Retrieves the metadata uri of a given token. WARNING: This method\n     * will consume a lot of gas if invoked inside a transaction, so\n     * it is recommended to invoke this method in the context of a\n     * CALL, and never in the context of a SEND (even as part of other\n     * contract's code).\n     */\n    function tokenURI(uint256 _tokenId) external view returns (string memory);\n\n    /**\n     * Hook to be invoked as part of a burn process when an address burns\n     * a particular token in some quantity (for NFTs, the quantity is 1\n     * in every case). By this point, we should be guaranteed that the\n     * _tokenId will actually have a resolver (being it a fungible token\n     * type, or being it a non-fungible token id).\n     */\n    function onTokenBurned(address _from, uint256 _tokenId, uint256 _amount) external;\n\n    /**\n     * Hook to be invoked as part of a batch burn process when an address\n     * burns a particulars et of tokens in respective quantities (for NFTs,\n     * the quantity is 1 in every case; it is guaranteed that both arrays\n     * are always of the same length.\n     */\n    function onTokensBurned(address _from, uint256[] memory _tokenIds, uint256[] memory _amounts) external;\n\n    /**\n     * Hook to be invoked as part of a transfer from ERC1155.\n     */\n    function onBrandOwnerChanged(address _brandId, address _newOwner) external;\n}\n",
  "sourcePath": "/home/luismasuelli/Projects/OuterMaze/lingr-contracts/contracts/lingr/IMetaverse.sol",
  "ast": {
    "absolutePath": "project:/contracts/lingr/IMetaverse.sol",
    "exportedSymbols": {
      "IMetaverse": [
        2911
      ]
    },
    "id": 2912,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2815,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:29:13"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMetaverse",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2816,
          "nodeType": "StructuredDocumentation",
          "src": "63:161:13",
          "text": " An interface for the metaverse core contract. This is meant\n to be used from inside the metaverse plug-ins (typically on\n plug-in initialization)."
        },
        "fullyImplemented": false,
        "id": 2911,
        "linearizedBaseContracts": [
          2911
        ],
        "name": "IMetaverse",
        "nameLocation": "235:10:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2817,
              "nodeType": "StructuredDocumentation",
              "src": "252:388:13",
              "text": " This is the list of plug-ins that are being added to the hub.\n Each contract has its separate logic but they have access to\n the same set of features. Once a contract is added, it will\n never be removed from this list. This mapping tells whether\n a contract in particular has permission(s) to define a type\n and mint tokens for an address."
            },
            "functionSelector": "4b12e643",
            "id": 2824,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "plugins",
            "nameLocation": "654:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "670:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "662:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:14:13"
            },
            "returnParameters": {
              "id": 2823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "699:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:6:13"
            },
            "scope": 2911,
            "src": "645:60:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2825,
              "nodeType": "StructuredDocumentation",
              "src": "711:64:13",
              "text": " The linked brand registry for this metaverse."
            },
            "functionSelector": "5b1798e4",
            "id": 2830,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "brandRegistry",
            "nameLocation": "789:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:13"
            },
            "returnParameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "828:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:9:13"
            },
            "scope": 2911,
            "src": "780:57:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2831,
              "nodeType": "StructuredDocumentation",
              "src": "843:57:13",
              "text": " The linked economy for this metaverse."
            },
            "functionSelector": "8820f6bd",
            "id": 2836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "economy",
            "nameLocation": "914:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:2:13"
            },
            "returnParameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "947:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:9:13"
            },
            "scope": 2911,
            "src": "905:51:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2837,
              "nodeType": "StructuredDocumentation",
              "src": "962:135:13",
              "text": " Defines the resolution of a fungible token type. The token id must be\n in the range of the fungible token ids."
            },
            "functionSelector": "ab21afb5",
            "id": 2842,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defineFTType",
            "nameLocation": "1111:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1132:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2842,
                  "src": "1124:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:18:13"
            },
            "returnParameters": {
              "id": 2841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:0:13"
            },
            "scope": 2911,
            "src": "1102:49:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2843,
              "nodeType": "StructuredDocumentation",
              "src": "1157:191:13",
              "text": " Defines the resolution of a non-fungible token type. The token id must\n be in the range of the fungible token (type) ids (strictly > 0, strictly\n < (1 << 255))."
            },
            "functionSelector": "28c90cd9",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defineNFTType",
            "nameLocation": "1362:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2845,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1384:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "1376:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:18:13"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1402:0:13"
            },
            "scope": 2911,
            "src": "1353:50:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "1409:77:13",
              "text": " Mints a specific fungible token type, in a certain amount."
            },
            "functionSelector": "a16bc2ae",
            "id": 2860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintFTFor",
            "nameLocation": "1500:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1518:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1510:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1531:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1523:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1549:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1541:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1571:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1558:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:68:13"
            },
            "returnParameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:0:13"
            },
            "scope": 2911,
            "src": "1491:96:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2861,
              "nodeType": "StructuredDocumentation",
              "src": "1593:253:13",
              "text": " Mints a specific non-fungible token type, using a specific id (and always using\n an amount of 1). It is an error if the token id is already minted, or the chosen\n id is < (1 << 160) since those ids are reserved for brands."
            },
            "functionSelector": "b2863cc1",
            "id": 2872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFTFor",
            "nameLocation": "1860:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1879:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1871:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1892:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1884:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "_tokenType",
                  "nameLocation": "1910:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1902:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1935:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1922:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:71:13"
            },
            "returnParameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:13"
            },
            "scope": 2911,
            "src": "1851:100:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2873,
              "nodeType": "StructuredDocumentation",
              "src": "1957:316:13",
              "text": " Retrieves the metadata uri of a given token. WARNING: This method\n will consume a lot of gas if invoked inside a transaction, so\n it is recommended to invoke this method in the context of a\n CALL, and never in the context of a SEND (even as part of other\n contract's code)."
            },
            "functionSelector": "c87b56dd",
            "id": 2880,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2287:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2875,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2304:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "2296:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2295:18:13"
            },
            "returnParameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "2337:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:15:13"
            },
            "scope": 2911,
            "src": "2278:74:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2881,
              "nodeType": "StructuredDocumentation",
              "src": "2358:352:13",
              "text": " Hook to be invoked as part of a burn process when an address burns\n a particular token in some quantity (for NFTs, the quantity is 1\n in every case). By this point, we should be guaranteed that the\n _tokenId will actually have a resolver (being it a fungible token\n type, or being it a non-fungible token id)."
            },
            "functionSelector": "06716519",
            "id": 2890,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTokenBurned",
            "nameLocation": "2724:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2883,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2746:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2738:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2885,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2761:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2753:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2887,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2779:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2771:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:50:13"
            },
            "returnParameters": {
              "id": 2889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:13"
            },
            "scope": 2911,
            "src": "2715:82:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2891,
              "nodeType": "StructuredDocumentation",
              "src": "2803:273:13",
              "text": " Hook to be invoked as part of a batch burn process when an address\n burns a particulars et of tokens in respective quantities (for NFTs,\n the quantity is 1 in every case; it is guaranteed that both arrays\n are always of the same length."
            },
            "functionSelector": "2320a8b7",
            "id": 2902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTokensBurned",
            "nameLocation": "3090:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2893,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3113:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3105:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3105:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2896,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "3137:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3120:26:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2894,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3120:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2895,
                    "nodeType": "ArrayTypeName",
                    "src": "3120:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2899,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "3165:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3148:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2897,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3148:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2898,
                    "nodeType": "ArrayTypeName",
                    "src": "3148:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3104:70:13"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3183:0:13"
            },
            "scope": 2911,
            "src": "3081:103:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2903,
              "nodeType": "StructuredDocumentation",
              "src": "3190:73:13",
              "text": " Hook to be invoked as part of a transfer from ERC1155."
            },
            "functionSelector": "8cd6e9a9",
            "id": 2910,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onBrandOwnerChanged",
            "nameLocation": "3277:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2905,
                  "mutability": "mutable",
                  "name": "_brandId",
                  "nameLocation": "3305:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "3297:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "3323:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "3315:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:37:13"
            },
            "returnParameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3342:0:13"
            },
            "scope": 2911,
            "src": "3268:75:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2912,
        "src": "225:3120:13",
        "usedErrors": []
      }
    ],
    "src": "32:3314:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/lingr/IMetaverse.sol",
    "exportedSymbols": {
      "IMetaverse": [
        2911
      ]
    },
    "id": 2912,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2815,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:29:13"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMetaverse",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2816,
          "nodeType": "StructuredDocumentation",
          "src": "63:161:13",
          "text": " An interface for the metaverse core contract. This is meant\n to be used from inside the metaverse plug-ins (typically on\n plug-in initialization)."
        },
        "fullyImplemented": false,
        "id": 2911,
        "linearizedBaseContracts": [
          2911
        ],
        "name": "IMetaverse",
        "nameLocation": "235:10:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2817,
              "nodeType": "StructuredDocumentation",
              "src": "252:388:13",
              "text": " This is the list of plug-ins that are being added to the hub.\n Each contract has its separate logic but they have access to\n the same set of features. Once a contract is added, it will\n never be removed from this list. This mapping tells whether\n a contract in particular has permission(s) to define a type\n and mint tokens for an address."
            },
            "functionSelector": "4b12e643",
            "id": 2824,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "plugins",
            "nameLocation": "654:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "670:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "662:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:14:13"
            },
            "returnParameters": {
              "id": 2823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2824,
                  "src": "699:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:6:13"
            },
            "scope": 2911,
            "src": "645:60:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2825,
              "nodeType": "StructuredDocumentation",
              "src": "711:64:13",
              "text": " The linked brand registry for this metaverse."
            },
            "functionSelector": "5b1798e4",
            "id": 2830,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "brandRegistry",
            "nameLocation": "789:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:13"
            },
            "returnParameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "828:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:9:13"
            },
            "scope": 2911,
            "src": "780:57:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2831,
              "nodeType": "StructuredDocumentation",
              "src": "843:57:13",
              "text": " The linked economy for this metaverse."
            },
            "functionSelector": "8820f6bd",
            "id": 2836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "economy",
            "nameLocation": "914:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:2:13"
            },
            "returnParameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "947:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:9:13"
            },
            "scope": 2911,
            "src": "905:51:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2837,
              "nodeType": "StructuredDocumentation",
              "src": "962:135:13",
              "text": " Defines the resolution of a fungible token type. The token id must be\n in the range of the fungible token ids."
            },
            "functionSelector": "ab21afb5",
            "id": 2842,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defineFTType",
            "nameLocation": "1111:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1132:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2842,
                  "src": "1124:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:18:13"
            },
            "returnParameters": {
              "id": 2841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:0:13"
            },
            "scope": 2911,
            "src": "1102:49:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2843,
              "nodeType": "StructuredDocumentation",
              "src": "1157:191:13",
              "text": " Defines the resolution of a non-fungible token type. The token id must\n be in the range of the fungible token (type) ids (strictly > 0, strictly\n < (1 << 255))."
            },
            "functionSelector": "28c90cd9",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defineNFTType",
            "nameLocation": "1362:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2845,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1384:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "1376:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:18:13"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1402:0:13"
            },
            "scope": 2911,
            "src": "1353:50:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "1409:77:13",
              "text": " Mints a specific fungible token type, in a certain amount."
            },
            "functionSelector": "a16bc2ae",
            "id": 2860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintFTFor",
            "nameLocation": "1500:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1518:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1510:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1531:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1523:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1549:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1541:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1571:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "1558:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:68:13"
            },
            "returnParameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:0:13"
            },
            "scope": 2911,
            "src": "1491:96:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2861,
              "nodeType": "StructuredDocumentation",
              "src": "1593:253:13",
              "text": " Mints a specific non-fungible token type, using a specific id (and always using\n an amount of 1). It is an error if the token id is already minted, or the chosen\n id is < (1 << 160) since those ids are reserved for brands."
            },
            "functionSelector": "b2863cc1",
            "id": 2872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFTFor",
            "nameLocation": "1860:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1879:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1871:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1892:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1884:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "_tokenType",
                  "nameLocation": "1910:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1902:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1935:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "1922:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:71:13"
            },
            "returnParameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:13"
            },
            "scope": 2911,
            "src": "1851:100:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2873,
              "nodeType": "StructuredDocumentation",
              "src": "1957:316:13",
              "text": " Retrieves the metadata uri of a given token. WARNING: This method\n will consume a lot of gas if invoked inside a transaction, so\n it is recommended to invoke this method in the context of a\n CALL, and never in the context of a SEND (even as part of other\n contract's code)."
            },
            "functionSelector": "c87b56dd",
            "id": 2880,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2287:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2875,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2304:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "2296:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2295:18:13"
            },
            "returnParameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "2337:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:15:13"
            },
            "scope": 2911,
            "src": "2278:74:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2881,
              "nodeType": "StructuredDocumentation",
              "src": "2358:352:13",
              "text": " Hook to be invoked as part of a burn process when an address burns\n a particular token in some quantity (for NFTs, the quantity is 1\n in every case). By this point, we should be guaranteed that the\n _tokenId will actually have a resolver (being it a fungible token\n type, or being it a non-fungible token id)."
            },
            "functionSelector": "06716519",
            "id": 2890,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTokenBurned",
            "nameLocation": "2724:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2883,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2746:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2738:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2885,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2761:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2753:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2887,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2779:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "2771:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:50:13"
            },
            "returnParameters": {
              "id": 2889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:13"
            },
            "scope": 2911,
            "src": "2715:82:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2891,
              "nodeType": "StructuredDocumentation",
              "src": "2803:273:13",
              "text": " Hook to be invoked as part of a batch burn process when an address\n burns a particulars et of tokens in respective quantities (for NFTs,\n the quantity is 1 in every case; it is guaranteed that both arrays\n are always of the same length."
            },
            "functionSelector": "2320a8b7",
            "id": 2902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTokensBurned",
            "nameLocation": "3090:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2893,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3113:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3105:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3105:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2896,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "3137:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3120:26:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2894,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3120:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2895,
                    "nodeType": "ArrayTypeName",
                    "src": "3120:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2899,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "3165:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "3148:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2897,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3148:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2898,
                    "nodeType": "ArrayTypeName",
                    "src": "3148:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3104:70:13"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3183:0:13"
            },
            "scope": 2911,
            "src": "3081:103:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2903,
              "nodeType": "StructuredDocumentation",
              "src": "3190:73:13",
              "text": " Hook to be invoked as part of a transfer from ERC1155."
            },
            "functionSelector": "8cd6e9a9",
            "id": 2910,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onBrandOwnerChanged",
            "nameLocation": "3277:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2905,
                  "mutability": "mutable",
                  "name": "_brandId",
                  "nameLocation": "3305:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "3297:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "3323:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "3315:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:37:13"
            },
            "returnParameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3342:0:13"
            },
            "scope": 2911,
            "src": "3268:75:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2912,
        "src": "225:3120:13",
        "usedErrors": []
      }
    ],
    "src": "32:3314:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-08-08T03:06:07.040Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "brandRegistry()": {
        "notice": "The linked brand registry for this metaverse."
      },
      "defineFTType(uint256)": {
        "notice": "Defines the resolution of a fungible token type. The token id must be in the range of the fungible token ids."
      },
      "defineNFTType(uint256)": {
        "notice": "Defines the resolution of a non-fungible token type. The token id must be in the range of the fungible token (type) ids (strictly > 0, strictly < (1 << 255))."
      },
      "economy()": {
        "notice": "The linked economy for this metaverse."
      },
      "mintFTFor(address,uint256,uint256,bytes)": {
        "notice": "Mints a specific fungible token type, in a certain amount."
      },
      "mintNFTFor(address,uint256,uint256,bytes)": {
        "notice": "Mints a specific non-fungible token type, using a specific id (and always using an amount of 1). It is an error if the token id is already minted, or the chosen id is < (1 << 160) since those ids are reserved for brands."
      },
      "onBrandOwnerChanged(address,address)": {
        "notice": "Hook to be invoked as part of a transfer from ERC1155."
      },
      "onTokenBurned(address,uint256,uint256)": {
        "notice": "Hook to be invoked as part of a burn process when an address burns a particular token in some quantity (for NFTs, the quantity is 1 in every case). By this point, we should be guaranteed that the _tokenId will actually have a resolver (being it a fungible token type, or being it a non-fungible token id)."
      },
      "onTokensBurned(address,uint256[],uint256[])": {
        "notice": "Hook to be invoked as part of a batch burn process when an address burns a particulars et of tokens in respective quantities (for NFTs, the quantity is 1 in every case; it is guaranteed that both arrays are always of the same length."
      },
      "plugins(address)": {
        "notice": "This is the list of plug-ins that are being added to the hub. Each contract has its separate logic but they have access to the same set of features. Once a contract is added, it will never be removed from this list. This mapping tells whether a contract in particular has permission(s) to define a type and mint tokens for an address."
      },
      "tokenURI(uint256)": {
        "notice": "Retrieves the metadata uri of a given token. WARNING: This method will consume a lot of gas if invoked inside a transaction, so it is recommended to invoke this method in the context of a CALL, and never in the context of a SEND (even as part of other contract's code)."
      }
    },
    "notice": "An interface for the metaverse core contract. This is meant to be used from inside the metaverse plug-ins (typically on plug-in initialization).",
    "version": 1
  }
}